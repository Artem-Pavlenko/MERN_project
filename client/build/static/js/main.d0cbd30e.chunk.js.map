{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/Loader.js","components/LinksList.js","pages/LinksPage.jsx","pages/CteatePage.jsx","components/LinkCard.js","pages/DetailPage.jsx","pages/AuthPage.jsx","hooks/message.hook.js","hooks/auth.hook.js","components/NavBar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","console","log","Error","message","clearError","noop","AuthContext","createContext","token","userID","login","logout","isAuthenticated","Loader","style","display","justifyContent","paddingTop","className","LinksList","links","length","map","link","index","from","to","_id","LinksPage","setLinks","useContext","useEffect","Authorization","fetched","getLinks","CreatePage","history","useHistory","auth","setLink","keyPresHandler","event","key","push","window","M","updateTextFields","padding","placeholder","id","type","value","onChange","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","userId","marginRight","disabled","onClick","storageName","NavBar","preventDefault","App","setToken","ready","setReady","setUserID","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","render","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"sNAEaA,EAAU,WAAO,IAAD,EACKC,oBAAS,GADd,mBAClBC,EADkB,KACTC,EADS,OAECF,mBAAS,MAFV,mBAElBG,EAFkB,KAEXC,EAFW,KA6BzB,MAAO,CAACH,UAASI,QA1BDC,sBAAW,uCAAC,WAAOC,GAAP,mCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMC,EAAzC,+BAAmD,GAC3ET,GAAW,GADa,SAIhBQ,IACAA,EAAOE,KAAKC,UAAUH,GACtBC,EAAQ,gBAAkB,oBANV,SAQGG,MAAMP,EAAK,CAACE,SAAQC,OAAMC,YAR7B,cAQdI,EARc,iBASDA,EAASC,OATR,WASdC,EATc,OAUfF,EAASG,GAVM,uBAWhBC,QAAQC,IAAI,sBAAuBH,GAC7B,IAAII,MAAMJ,EAAKK,SAAW,sBAZhB,eAcpBpB,GAAW,GAdS,kBAebe,GAfa,wCAkBpBf,GAAW,GACXiB,QAAQC,IAAI,0BAA2B,KAAEE,SACzClB,EAAS,KAAEkB,SApBS,+DAAD,sDAuBxB,IAGuBnB,QAAOoB,WAFdjB,uBAAY,kBAAMF,EAAS,QAAO,MC3BzD,SAASoB,KAEF,IAAMC,EAAcC,wBAAc,CACrCC,MAAO,KACPC,OAAQ,KACRC,MAAOL,EACPM,OAAQN,EACRO,iBAAiB,ICPRC,EAAS,kBAClB,qBAAKC,MAAO,CAACC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,QAApE,SACI,qBAAKC,UAAU,2BAAf,SACI,sBAAKA,UAAU,iCAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,qBAAKA,UAAU,aAEnB,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,aAEnB,qBAAKA,UAAU,uBAAf,SACI,qBAAKA,UAAU,qB,QCVtBC,EAAY,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEvB,OAAKA,EAAMC,OAKP,8BACI,kCACI,gCACA,+BACI,wCACA,gHACA,oGACA,iFAIJ,gCACCD,EAAME,KAAI,SAACC,EAAMC,GACd,OACI,+BACI,6BAAKA,EAAQ,IACb,6BAAKD,EAAKE,OACV,6BAAKF,EAAKG,KACV,6BACI,cAAC,IAAD,CAAMA,GAAE,kBAAaH,EAAKI,KAA1B,4DALCJ,EAAKI,eAlBvB,mBAAGT,UAAU,SAAb,+FCAFU,EAAY,WAAO,IAAD,EAED/C,mBAAS,IAFR,mBAEpBuC,EAFoB,KAEbS,EAFa,KAGpBrB,EAASsB,qBAAWxB,GAApBE,MAHoB,EAIA5B,IAApBE,EAJoB,EAIpBA,QAASI,EAJW,EAIXA,QAchB,OAZA6C,qBAAW,YACO,uCAAG,4BAAA1C,EAAA,+EAEaH,EAAQ,YAAa,MAAO,KAAM,CACpD8C,cAAc,UAAD,OAAYxB,KAHpB,OAEHyB,EAFG,OAKTJ,EAASI,GALA,uGAAH,qDAQdC,KACD,IAECpD,EAAgB,cAAC,EAAD,IAGhB,oCACMA,GAAW,cAAC,EAAD,CAAWsC,MAAOA,OCvB9Be,EAAa,WACtB,IAAMC,EAAUC,cACVC,EAAOR,qBAAWxB,GAFI,EAGJzB,mBAAS,IAHL,mBAGrB0C,EAHqB,KAGfgB,EAHe,KAIrBrD,EAAWN,IAAXM,QAEDsD,EAAc,uCAAG,WAAOC,GAAP,eAAApD,EAAA,yDACD,UAAdoD,EAAMC,IADS,0CAGQxD,EAAQ,qBAAsB,OAAQ,CAACuC,KAAMF,GAAO,CACnES,cAAc,UAAD,OAAYM,EAAK9B,SAJvB,OAGLV,EAHK,OAMXE,QAAQC,IAAI,iCAAkCH,GAC9CsC,EAAQO,KAAR,kBAAwB7C,EAAKyB,KAAKI,MAPvB,yGAAH,sDAgBpB,OAJAI,qBAAW,WACPa,OAAOC,EAAEC,qBACV,IAGC,qBAAK5B,UAAU,MAAMJ,MAAO,CAACiC,QAAS,QAAtC,SACI,qBAAK7B,UAAU,mBAAf,SACI,sBAAKA,UAAU,cAAf,UACI,uBACI8B,YAAY,kFACZC,GAAG,OACHC,KAAK,OACLC,MAAO5B,EACP6B,SAAW,SAAAX,GAAK,OAAIF,EAAQE,EAAMY,OAAOF,QACzCG,WAAYd,IAEhB,uBAAOe,QAAQ,OAAf,qGCrCPC,EAAW,SAAC,GAAY,IAAXjC,EAAU,EAAVA,KAEtB,OACI,qCACI,sEAEA,gGAAgB,mBAAGkC,KAAMlC,EAAKG,GAAI2B,OAAO,SAASK,IAAI,sBAAtC,SAA6DnC,EAAKG,QAClF,uEAAW,mBAAG+B,KAAMlC,EAAKE,KAAM4B,OAAO,SAASK,IAAI,sBAAxC,SAA+DnC,EAAKE,UAC/E,sLAAgC,4BAAIF,EAAKoC,YACzC,4GAAkB,4BAAI,IAAIC,KAAKrC,EAAKsC,MAAMC,8BCHzCC,EAAa,WAAO,IACtBvD,EAASsB,qBAAWxB,GAApBE,MADqB,EAED5B,IAApBM,EAFqB,EAErBA,QAASJ,EAFY,EAEZA,QACVkF,EAASC,cAAYhB,GAHC,EAIJpE,mBAAS,MAJL,mBAIrB0C,EAJqB,KAIfgB,EAJe,KAmB5B,OAZAR,qBAAU,YACO,uCAAG,4BAAA1C,EAAA,+EAEcH,EAAQ,aAAD,OAAc8E,GAAU,MAAO,KAAM,CAC9DhC,cAAc,UAAD,OAAYxB,KAHrB,OAEFyB,EAFE,OAKRM,EAAQN,GALA,uGAAH,qDAQbiC,KACD,IAECpF,EAAgB,cAAC,EAAD,IAGhB,oCACMA,GAAWyC,GAAQ,cAAC,EAAD,CAAUA,KAAMA,O,gBC1BpC4C,EAAW,WAEpB,IAAM7B,EAAOR,qBAAWxB,GAFE,EAGoB1B,IAAvCE,EAHmB,EAGnBA,QAASI,EAHU,EAGVA,QAASF,EAHC,EAGDA,MAAOoB,EAHN,EAGMA,WAC1BD,ECNChB,uBAAa,SAACiF,GACbxB,OAAOC,GAAKuB,GACZxB,OAAOC,EAAEwB,MAAM,CAACC,KAAMF,MAE3B,IDFuB,EAKFvF,mBAAS,CAC7B0F,MAAO,GAAIC,SAAU,KANC,mBAKnBC,EALmB,KAKbC,EALa,KAS1B3C,qBAAU,WACN5B,EAAQnB,GACRoB,MACD,CAACpB,EAAOmB,EAASC,IAEpB2B,qBAAW,WACPa,OAAOC,EAAEC,qBACV,IAEH,IAAM6B,EAAgB,SAAAlC,GAClBiC,EAAQ,2BAAID,GAAL,kBAAYhC,EAAMY,OAAOuB,KAAOnC,EAAMY,OAAOF,UAGlD0B,EAAe,uCAAG,4BAAAxF,EAAA,+EAEGH,EAAQ,qBAAsB,OAAvB,eAAmCuF,IAF7C,OAEV3E,EAFU,OAGhBE,QAAQC,IAAI,iBAAkBH,GAHd,uGAAH,qDAQfgF,EAAY,uCAAG,4BAAAzF,EAAA,+EAEMH,EAAQ,kBAAmB,OAApB,eAAgCuF,IAF7C,OAEP3E,EAFO,OAGbwC,EAAK5B,MAAMZ,EAAKU,MAAOV,EAAKiF,QAHf,uGAAH,qDAQlB,OACI,qBAAK7D,UAAU,MAAf,SACI,sBAAKA,UAAU,mBAAf,UACI,iHACA,sBAAKA,UAAU,qBAAf,UACI,sBAAKA,UAAU,0BAAf,UACI,sBAAMA,UAAU,aAAhB,gFACA,gCAEI,sBAAKA,UAAU,cAAf,UACI,uBACI8B,YAAY,mDACZC,GAAG,QACHC,KAAK,OACL0B,KAAK,QACL1D,UAAU,eACVkC,SAAUuB,EACVxB,MAAOsB,EAAKF,QAEhB,uBAAOhB,QAAQ,QAAf,sBAGJ,sBAAKrC,UAAU,cAAf,UACI,uBACI8B,YAAY,kFACZC,GAAG,OACHC,KAAK,WACL0B,KAAK,WACL1D,UAAU,eACVkC,SAAUuB,EACVxB,MAAOsB,EAAKD,WAEhB,uBAAOjB,QAAQ,OAAf,2DAKZ,sBAAKrC,UAAU,cAAf,UACI,wBACIA,UAAU,sBACVJ,MAAO,CAACkE,YAAa,QACrBC,SAAUnG,EACVoG,QAASJ,EAJb,4CAQA,wBACI5D,UAAU,gCACVgE,QAASL,EACTI,SAAUnG,EAHd,4FEvFlBqG,EAAc,WCEPC,EAAS,WAClB,IAAMhD,EAAUC,cACVC,EAAOR,qBAAWxB,GAOxB,OACI,8BACI,sBAAKY,UAAU,4BAA4BJ,MAAO,CAACiC,QAAS,UAA5D,UACI,sBAAM7B,UAAU,aAAhB,+GACA,qBAAI+B,GAAG,aAAa/B,UAAU,6BAA9B,UACI,6BAAI,cAAC,IAAD,CAASQ,GAAG,UAAZ,0DACJ,6BAAI,cAAC,IAAD,CAASA,GAAG,SAAZ,oDACJ,6BAAI,mBAAG+B,KAAK,IAAIyB,QAbV,SAAAzC,GAClBA,EAAM4C,iBACN/C,EAAK3B,SACLyB,EAAQO,KAAK,MAUG,uD,MCKT2C,MAjBf,WAAgB,IAAD,EFJQ,WAAO,IAAD,EACCzG,mBAAS,MADV,mBAClB2B,EADkB,KACX+E,EADW,OAEC1G,oBAAS,GAFV,mBAElB2G,EAFkB,KAEXC,EAFW,OAGG5G,mBAAS,MAHZ,mBAGlB4B,EAHkB,KAGViF,EAHU,KAKnBhF,EAAQvB,uBAAY,SAACwG,EAAU1C,GACjCsC,EAASI,GACTD,EAAUzC,GACV2C,aAAaC,QAAQV,EAAa1F,KAAKC,UAAU,CAACe,OAAQwC,EAAIzC,MAAOmF,OACtE,IAEGhF,EAASxB,uBAAY,WACvBoG,EAAS,MACTG,EAAU,MACVE,aAAaE,WAAWX,KACzB,IAUH,OARApD,qBAAU,WACN,IAAMjC,EAAOL,KAAKsG,MAAMH,aAAaI,QAAQb,IACzCrF,GAAQA,EAAKU,OACbE,EAAMZ,EAAKU,MAAOV,EAAKW,QAE3BgF,GAAS,KACV,CAAC/E,IAEG,CAACA,QAAOC,SAAQH,QAAOC,SAAQ+E,SEpBQS,GAAvCzF,EADI,EACJA,MAAOC,EADH,EACGA,OAAQC,EADX,EACWA,MAAOC,EADlB,EACkBA,OAAQ6E,EAD1B,EAC0BA,MAC/B5E,IAAoBJ,EACpB0F,ECJe,SAAAtF,GACrB,OAAIA,EAEI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuF,KAAK,SAASC,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,OACzC,cAAC,IAAD,CAAOF,KAAK,UAAUC,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,OAC1C,cAAC,IAAD,CAAOF,KAAK,cAAcE,OAAQ,kBAAM,cAAC,EAAD,OACxC,cAAC,IAAD,CAAU3E,GAAI,eAKtB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOyE,KAAK,IAAIC,OAAK,EAACC,OAAQ,kBAAM,cAAC,EAAD,OACpC,cAAC,IAAD,CAAU3E,GAAI,SDVP4E,CAAU1F,GAEzB,OAAK4E,EAGD,eAAClF,EAAYiG,SAAb,CAAsBpD,MAAO,CAAC3C,QAAOC,SAAQC,QAAOC,SAAQC,mBAA5D,UACKA,GAAmB,cAAC,EAAD,IACpB,qBAAKM,UAAU,YAAf,SACKgF,OANM,cAAC,EAAD,KEDRM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASZ,OACL,cAAC,IAAMa,WAAP,UACI,cAAC,IAAD,UACI,cAAC,EAAD,QAGRC,SAASC,eAAe,SAM5BZ,M","file":"static/js/main.d0cbd30e.chunk.js","sourcesContent":["import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setLoading(true)\r\n        try {\r\n\r\n            if (body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json'\r\n            }\r\n            const response = await fetch(url, {method, body, headers})\r\n            const data = await response.json()\r\n            if (!response.ok) {\r\n                console.log('(http.hook.js)data:', data)\r\n                throw new Error(data.message || 'Something\\'s wrongs')\r\n            }\r\n            setLoading(false)\r\n            return data\r\n\r\n        } catch (e) {\r\n            setLoading(false)\r\n            console.log('(http.hook.js in catch)', e.message)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    }, [])\r\n    const clearError = useCallback(() => setError(null), [])\r\n\r\n    return {loading, request, error, clearError}\r\n}","import {createContext} from \"react\";\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n    token: null,\r\n    userID: null,\r\n    login: noop,\r\n    logout: noop,\r\n    isAuthenticated: false\r\n})","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n    <div style={{display: 'flex', justifyContent: 'center', paddingTop: '2rem'}}>\r\n        <div className=\"preloader-wrapper active\">\r\n            <div className=\"spinner-layer spinner-red-only\">\r\n                <div className=\"circle-clipper left\">\r\n                    <div className=\"circle\"/>\r\n                </div>\r\n                <div className=\"gap-patch\">\r\n                    <div className=\"circle\"/>\r\n                </div>\r\n                <div className=\"circle-clipper right\">\r\n                    <div className=\"circle\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n)\r\n","import React from \"react\";\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport const LinksList = ({links}) => {\r\n\r\n    if (!links.length) {\r\n        return <p className='center'>Ссылок пока нет</p>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>№</th>\r\n                    <th>Оригинальнная</th>\r\n                    <th>Сокращенная</th>\r\n                    <th>Открыть</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {links.map((link, index) => {\r\n                    return (\r\n                        <tr key={link._id}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{link.from}</td>\r\n                            <td>{link.to}</td>\r\n                            <td>\r\n                                <Link to={`/detail/${link._id}`}>Открыть</Link>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {LinksList} from \"../components/LinksList\";\r\n\r\nexport const LinksPage = () => {\r\n\r\n    const [links, setLinks] = useState([])\r\n    const {token} = useContext(AuthContext)\r\n    const {loading, request} = useHttp()\r\n\r\n    useEffect( () => {\r\n        const getLinks = async () => {\r\n            try {\r\n                const fetched = await request(`/api/link`, 'GET', null, {\r\n                    Authorization: `Bearer ${token}`\r\n                })\r\n                setLinks(fetched)\r\n            } catch (e) {}\r\n        }\r\n        getLinks()\r\n    }, [])\r\n\r\n    if (loading) return <Loader/>\r\n\r\n    return (\r\n        <>\r\n            {!loading && <LinksList links={links}/>}\r\n        </>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nexport const CreatePage = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const [link, setLink] = useState('')\r\n    const {request} = useHttp()\r\n\r\n    const keyPresHandler = async (event) => {\r\n        if (event.key === 'Enter') {\r\n            try {\r\n                const data = await request('/api/link/generate', 'POST', {from: link}, {\r\n                    Authorization: `Bearer ${auth.token}`\r\n                })\r\n                console.log('CreatePage, /api/link/generate', data)\r\n                history.push(`/detail/${data.link._id}`)\r\n            } catch (e) {}\r\n        }\r\n    }\r\n\r\n    useEffect( () => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    return (\r\n        <div className='row' style={{padding: '2rem'}}>\r\n            <div className=\"col s8 offset-s2\" >\r\n                <div className=\"input-field\">\r\n                    <input\r\n                        placeholder=\"Вставте ссылку\"\r\n                        id=\"link\"\r\n                        type=\"text\"\r\n                        value={link}\r\n                        onChange={(event => setLink(event.target.value))}\r\n                        onKeyPress={keyPresHandler}\r\n                    />\r\n                    <label htmlFor=\"link\">Введите ссылку</label>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport const LinkCard = ({link}) => {\r\n\r\n    return (\r\n        <>\r\n            <h2>Ссылка</h2>\r\n\r\n            <p>Ваша ссылка: <a href={link.to} target='_blank' rel='noopener noreferrer'>{link.to}</a></p>\r\n            <p>Откуда: <a href={link.from} target='_blank' rel='noopener noreferrer'>{link.from}</a></p>\r\n            <p>Количество кликов по ссылке: <b>{link.clicks}</b></p>\r\n            <p>Дата создания: <b>{new Date(link.date).toLocaleDateString()}</b></p>\r\n        </>\r\n    )\r\n}","import React, {useCallback, useContext, useEffect, useState} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\nimport {Loader} from \"../components/Loader\";\r\nimport {LinkCard} from \"../components/LinkCard\";\r\n\r\n\r\nexport const DetailPage = () => {\r\n    const {token} = useContext(AuthContext)\r\n    const {request, loading} = useHttp()\r\n    const linkId = useParams().id\r\n    const [link, setLink] = useState(null)\r\n\r\n\r\n    useEffect(() => {\r\n        const getLink = async () => {\r\n            try {\r\n                const fetched = await request(`/api/link/${linkId}`, 'GET', null, {\r\n                    Authorization: `Bearer ${token}`\r\n                })\r\n                setLink(fetched)\r\n            } catch (e) {}\r\n        }\r\n        getLink()\r\n    }, [])\r\n\r\n    if (loading) return <Loader/>\r\n\r\n    return (\r\n        <>\r\n            {!loading && link && <LinkCard link={link}/>}\r\n        </>\r\n    )\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from \"../hooks/http.hook\";\r\nimport {useMessage} from \"../hooks/message.hook\";\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const AuthPage = () => {\r\n\r\n    const auth = useContext(AuthContext)\r\n    const {loading, request, error, clearError} = useHttp()\r\n    const message = useMessage()\r\n    const [form, setForm] = useState({\r\n        email: '', password: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        message(error)\r\n        clearError()\r\n    }, [error, message, clearError])\r\n\r\n    useEffect( () => {\r\n        window.M.updateTextFields()\r\n    }, [])\r\n\r\n    const changeHandler = event => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const registerHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/register', 'POST', {...form})\r\n            console.log('(AuthPage)data', data)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    const loginHandler = async () => {\r\n        try {\r\n            const data = await request('/api/auth/login', 'POST', {...form})\r\n            auth.login(data.token, data.userId)\r\n        } catch (e) {\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='row'>\r\n            <div className='col s6 offset-s3'>\r\n                <h1>Сократи ссылку</h1>\r\n                <div className=\"card blue darken-1\">\r\n                    <div className=\"card-content white-text\">\r\n                        <span className=\"card-title\">Авторизация</span>\r\n                        <div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите email\"\r\n                                    id=\"email\"\r\n                                    type=\"text\"\r\n                                    name=\"email\"\r\n                                    className=\"yellow-input\"\r\n                                    onChange={changeHandler}\r\n                                    value={form.email}\r\n                                />\r\n                                <label htmlFor=\"email\">Email</label>\r\n                            </div>\r\n\r\n                            <div className=\"input-field\">\r\n                                <input\r\n                                    placeholder=\"Введите пароль\"\r\n                                    id=\"pass\"\r\n                                    type=\"password\"\r\n                                    name=\"password\"\r\n                                    className=\"yellow-input\"\r\n                                    onChange={changeHandler}\r\n                                    value={form.password}\r\n                                />\r\n                                <label htmlFor=\"pass\">Пароль</label>\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card-action\">\r\n                        <button\r\n                            className='btn yellow darken-4'\r\n                            style={{marginRight: '10px'}}\r\n                            disabled={loading}\r\n                            onClick={loginHandler}\r\n                        >\r\n                            Войти\r\n                        </button>\r\n                        <button\r\n                            className='btn grey lighten-1 black-text'\r\n                            onClick={registerHandler}\r\n                            disabled={loading}\r\n                        >\r\n                            Регистрация\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useCallback} from \"react\";\r\n\r\nexport const useMessage = () => {\r\n    return useCallback( (text) => {\r\n        if (window.M && text) {\r\n            window.M.toast({html: text})\r\n        }\r\n    }, [])\r\n}","import {useCallback, useEffect, useState} from \"react\";\r\n\r\nconst storageName = 'userData'\r\n\r\nexport const useAuth = () => {\r\n    const [token, setToken] = useState(null)\r\n    const [ready, setReady] = useState(false)\r\n    const [userID, setUserID] = useState(null)\r\n\r\n    const login = useCallback((jwtToken, id) => {\r\n        setToken(jwtToken)\r\n        setUserID(id)\r\n        localStorage.setItem(storageName, JSON.stringify({userID: id, token: jwtToken}))\r\n    }, [])\r\n\r\n    const logout = useCallback(() => {\r\n        setToken(null)\r\n        setUserID(null)\r\n        localStorage.removeItem(storageName)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const data = JSON.parse(localStorage.getItem(storageName))\r\n        if (data && data.token) {\r\n            login(data.token, data.userID)\r\n        }\r\n        setReady(true)\r\n    }, [login])\r\n\r\n    return {login, logout, token, userID, ready}\r\n}","import React, {useContext} from \"react\";\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from \"../context/AuthContext\";\r\n\r\nexport const NavBar = () => {\r\n    const history = useHistory()\r\n    const auth = useContext(AuthContext)\r\n    const logoutHandler = event => {\r\n        event.preventDefault()\r\n        auth.logout()\r\n        history.push('/')\r\n    }\r\n\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper blue darken-1\" style={{padding: '0 2rem'}}>\r\n                <span className=\"brand-logo\">Сокращение ссылок</span>\r\n                <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n                    <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n                    <li><NavLink to=\"/links\">Ссылки</NavLink></li>\r\n                    <li><a href=\"/\" onClick={logoutHandler}>Выйти</a></li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\nimport {useRoutes} from \"./routes\";\nimport {useAuth} from \"./hooks/auth.hook\";\nimport {AuthContext} from \"./context/AuthContext\";\nimport {NavBar} from \"./components/NavBar\";\nimport 'materialize-css'\nimport {Loader} from \"./components/Loader\";\n\nfunction App() {\n    const {token, userID, login, logout, ready} = useAuth()\n    const isAuthenticated = !!token\n    const routes = useRoutes(isAuthenticated)\n\n    if (!ready) return <Loader/>\n\n    return (\n        <AuthContext.Provider value={{token, userID, login, logout, isAuthenticated}}>\n            {isAuthenticated && <NavBar/>}\n            <div className='container'>\n                {routes}\n            </div>\n        </AuthContext.Provider>\n    )\n}\n\nexport default App;\n","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {LinksPage} from \"./pages/LinksPage\";\r\nimport {CreatePage} from \"./pages/CteatePage\";\r\nimport {DetailPage} from \"./pages/DetailPage\";\r\nimport {AuthPage} from \"./pages/AuthPage\";\r\n\r\nexport const useRoutes = isAuthenticated => {\r\n    if (isAuthenticated) {\r\n        return (\r\n            <Switch>\r\n                <Route path='/links' exact render={() => <LinksPage/>}/>\r\n                <Route path='/create' exact render={() => <CreatePage/>}/>\r\n                <Route path='/detail/:id' render={() => <DetailPage/>}/>\r\n                <Redirect to={'/create'}/>\r\n            </Switch>\r\n        )\r\n    }\r\n    return (\r\n        <Switch>\r\n            <Route path='/' exact render={() => <AuthPage/>}/>\r\n            <Redirect to={'/'}/>\r\n        </Switch>\r\n    )\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}